-------------------------------------------
Instructions by Akash Mittal
27 Dec. 2024
-------------------------------------------

1. From https://www.fftw.org/ download Precompiled FFTW 3.3.5 Windows DLLs
	Example: 64-bit version: fftw-3.3.5-dll64.zip (3.1MB)
	
2. Extract the files into a folder. 
	Example: C:\fftw\
	
3. Create .lib file as follows.
	3.1. Open Developer Command Prompt for Visual Studio (if not available, then install Visual Studio)
	3.2. change cd to C:\fftw\
	3.3. type following for 64-bit version:
			lib /machine:x64 /def:libfftw3-3.def (press Enter)
			              ^ replace to x86 for other version
			Following files are generated,
				libfftw3-3.exp
				libfftw3-3.lib
	3.4. Create following folders in C:\fftw\, and copy the corresponding files into them.
			bin\		-> libfftw3-3.dll, libfftw3f-3.dll, libfftw3l-3.dll
			lib\		-> libfftw3-3.lib
			include\	-> fftw3.h
			
4. Open Visual Studio and create new project/existing project

5. Go to: Project Properties ->
			Fortran->General->Additional Include Directories: C:\fftw
			Linker->General->Additional Library Directories: C:\fftw\lib
			Linker->Input->Additional Dependencies: libfftw3-3.lib
			
		Hit Apply or OK

6. In the Visual Studio project folder, go to for example:
	x64/Debug/ and paste all the .dll files from C:\fftw\bin\
	or
	x64/Release/ and paste all the .dll files from C:\fftw\bin\
	       ^ Debug or Release depends upon how debugging is carried out in Visual Studio.
	The above folders might be available only after Building the code first time.
	
7. In the code write following lines:
	USE, INTRINSIC :: ISO_C_BINDING
	include 'fftw3.f03' 
		   
8. Use following sample code to test:
	
	PROGRAM test_fft
		! This sample tests fftw and parallel-computing (OpenMP) as well.
	
		USE, INTRINSIC :: ISO_C_BINDING
		use omp_lib ! for parallel-computing (can skip)
		IMPLICIT NONE
		include 'fftw3.f03' ! No need to provide full address since the address 
							! has been provided already in Fortran->General->
							! Additional Include Directories: C:\fftw

		! Assigning variables
		type(C_PTR) :: plan
		complex(C_DOUBLE_COMPLEX), dimension(5,5) :: in, out ! Both have to be complex
		integer i,j, num
		
		! Assigning some values
		DO i=1,size(in,1)
			do j=1,size(in,2)
				in(i,j) = i
			end do
		end do
		
		! Creating plan for FFTW
		plan = fftw_plan_dft_2d(size(in,1),size(in,2), in,out, FFTW_FORWARD, FFTW_ESTIMATE)
		
		! Calling FFTW
		call fftw_execute_dft(plan, in, out)
		
		! Destroying plan to free memory space
		call fftw_destroy_plan(plan)
		
		! Printing result
		print*,in
		print*
		print*,out

		! Checking OpenMP working or not
		num = omp_get_max_threads() ! for parallel-computing (can skip)
		print*, num,'++++++++'      ! for parallel-computing (can skip)
		
	END PROGRAM test_fft
	   
	